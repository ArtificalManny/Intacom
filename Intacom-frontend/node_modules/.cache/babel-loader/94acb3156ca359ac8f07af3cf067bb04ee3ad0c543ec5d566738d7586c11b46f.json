{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport api from '../../api/api';\nconst initialState = {\n  user: null,\n  token: null,\n  loading: false,\n  error: null\n};\n\n//Async Thunks\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, thunkAPI) => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return thunkAPI.rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, thunkAPI) => {\n  try {\n    const response = await axios.post('/users/register', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return thunkAPI.rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration Failed');\n  }\n});\n\n//Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.error = null;\n    },\n    setCredentials: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.access_token;\n    }\n  },\n  extraReducers: builder => {\n    //Handle async thunks\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.access_token;\n    }).addCase(loginUser.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = (_action$payload = action.payload) !== null && _action$payload !== void 0 ? _action$payload : 'Login request was rejected';\n    }).addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = (_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 ? _action$payload2 : 'Registration request was rejected';\n    });\n  }\n});\nexport const {\n  logout,\n  setCredentials\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","api","initialState","user","token","loading","error","loginUser","credentials","thunkAPI","response","post","data","_error$response","_error$response$data","rejectWithValue","registerUser","userData","_error$response2","_error$response2$data","authSlice","name","reducers","logout","state","setCredentials","action","payload","access_token","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload","_action$payload2","actions","reducer"],"sources":["/Users/artificalmanny/Portfolio/Intacom/Intacom/Intacom-frontend/src/features/authentication/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport api from '../../api/api';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  profilePicture?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\ninterface LoginResponse {\n  user: User;\n  access_token: string;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  loading: false,\n  error: null,\n};\n\n//Async Thunks\nexport const loginUser = createAsyncThunk<\nLoginResponse,\n{ email: string; password: string },\n{ rejectValue: string }\n>('auth/loginUser', async (credentials, thunkAPI) =>{\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error: any) {\n    return thunkAPI.rejectWithValue(error.response?.data?.error || 'Login failed');\n  }\n});\n\nexport const registerUser = createAsyncThunk<\n  User,\n  { email: string; password: string; name: string },\n  { rejectValue: string }\n  >('auth/registerUser', async (userData, thunkAPI) => {\n    try {\n      const response = await axios.post('/users/register', userData);\n      return response.data;\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue(error.response?.data?.error || 'Registration Failed');\n    }\n  });\n\n//Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.error = null;\n    },\n    setCredentials: (\n      state: AuthState,\n      action: PayloadAction<{ user: User; access_token: string}>\n    ) => {\n      state.user = action.payload.user;\n      state.token = action.payload.access_token;\n    },\n  },\n  extraReducers: (builder) => {\n    //Handle async thunks\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.access_token;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload ?? 'Login request was rejected';\n      })\n      .addCase(registerUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload ?? 'Registration request was rejected';\n      });\n  },\n});\n\nexport const { logout, setCredentials } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,eAAe;AAqB/B,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGR,gBAAgB,CAIvC,gBAAgB,EAAE,OAAOS,WAAW,EAAEC,QAAQ,KAAI;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,aAAa,EAAEH,WAAW,CAAC;IAC3D,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAON,KAAU,EAAE;IAAA,IAAAO,eAAA,EAAAC,oBAAA;IACnB,OAAOL,QAAQ,CAACM,eAAe,CAAC,EAAAF,eAAA,GAAAP,KAAK,CAACI,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBR,KAAK,KAAI,cAAc,CAAC;EAChF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMU,YAAY,GAAGjB,gBAAgB,CAIxC,mBAAmB,EAAE,OAAOkB,QAAQ,EAAER,QAAQ,KAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,iBAAiB,EAAEM,QAAQ,CAAC;IAC9D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAON,KAAU,EAAE;IAAA,IAAAY,gBAAA,EAAAC,qBAAA;IACnB,OAAOV,QAAQ,CAACM,eAAe,CAAC,EAAAG,gBAAA,GAAAZ,KAAK,CAACI,QAAQ,cAAAQ,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBb,KAAK,KAAI,qBAAqB,CAAC;EACvF;AACF,CAAC,CAAC;;AAEJ;AACA,MAAMc,SAAS,GAAGtB,WAAW,CAAC;EAC5BuB,IAAI,EAAE,MAAM;EACZnB,YAAY;EACZoB,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACrB,IAAI,GAAG,IAAI;MACjBqB,KAAK,CAACpB,KAAK,GAAG,IAAI;MAClBoB,KAAK,CAAClB,KAAK,GAAG,IAAI;IACpB,CAAC;IACDmB,cAAc,EAAEA,CACdD,KAAgB,EAChBE,MAA0D,KACvD;MACHF,KAAK,CAACrB,IAAI,GAAGuB,MAAM,CAACC,OAAO,CAACxB,IAAI;MAChCqB,KAAK,CAACpB,KAAK,GAAGsB,MAAM,CAACC,OAAO,CAACC,YAAY;IAC3C;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CACJC,OAAO,CAACxB,SAAS,CAACyB,OAAO,EAAGR,KAAK,IAAK;MACrCA,KAAK,CAACnB,OAAO,GAAG,IAAI;MACpBmB,KAAK,CAAClB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDyB,OAAO,CAACxB,SAAS,CAAC0B,SAAS,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAACrB,IAAI,GAAGuB,MAAM,CAACC,OAAO,CAACxB,IAAI;MAChCqB,KAAK,CAACpB,KAAK,GAAGsB,MAAM,CAACC,OAAO,CAACC,YAAY;IAC3C,CAAC,CAAC,CACDG,OAAO,CAACxB,SAAS,CAAC2B,QAAQ,EAAE,CAACV,KAAK,EAAEE,MAAM,KAAK;MAAA,IAAAS,eAAA;MAC9CX,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAAClB,KAAK,IAAA6B,eAAA,GAAGT,MAAM,CAACC,OAAO,cAAAQ,eAAA,cAAAA,eAAA,GAAI,4BAA4B;IAC9D,CAAC,CAAC,CACDJ,OAAO,CAACf,YAAY,CAACgB,OAAO,EAAGR,KAAK,IAAK;MACxCA,KAAK,CAACnB,OAAO,GAAG,IAAI;MACpBmB,KAAK,CAAClB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDyB,OAAO,CAACf,YAAY,CAACiB,SAAS,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAACrB,IAAI,GAAGuB,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDI,OAAO,CAACf,YAAY,CAACkB,QAAQ,EAAE,CAACV,KAAK,EAAEE,MAAM,KAAK;MAAA,IAAAU,gBAAA;MACjDZ,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAAClB,KAAK,IAAA8B,gBAAA,GAAGV,MAAM,CAACC,OAAO,cAAAS,gBAAA,cAAAA,gBAAA,GAAI,mCAAmC;IACrE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb,MAAM;EAAEE;AAAe,CAAC,GAAGL,SAAS,CAACiB,OAAO;AAC3D,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}