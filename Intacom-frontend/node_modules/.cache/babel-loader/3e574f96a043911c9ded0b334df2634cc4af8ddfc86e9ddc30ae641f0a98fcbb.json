{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  user: null,\n  token: null,\n  loading: false,\n  error: null\n};\n\n// ----- Async Thunks -----\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, thunkAPI) => {\n  try {\n    const response = await axios.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data.message);\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, thunkAPI) => {\n  try {\n    const response = await axios.post('/users/register', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    // Adjust if your error object has a different shape\n    return thunkAPI.rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Registration failed');\n  }\n});\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.error = null;\n    },\n    setCredentials(state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.access_token;\n    }\n  },\n  extraReducers: builder => {\n    // Login\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.access_token;\n    }).addCase(loginUser.rejected, (state, action) => {\n      var _action$payload$toStr;\n      state.loading = false;\n      state.error = (_action$payload$toStr = action.payload.toString) !== null && _action$payload$toStr !== void 0 ? _action$payload$toStr : 'Login request was rejected';\n    })\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      var _action$payload$toS;\n      state.loading = false;\n      state.error = (_action$payload$toS = action.payload.toS) !== null && _action$payload$toS !== void 0 ? _action$payload$toS : 'Registration request was rejected';\n    });\n  }\n});\nexport const {\n  logout,\n  setCredentials\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","user","token","loading","error","loginUser","credentials","thunkAPI","response","post","data","rejectWithValue","message","registerUser","userData","_error$response","_error$response$data","authSlice","name","reducers","logout","state","setCredentials","action","payload","access_token","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload$toStr","toString","_action$payload$toS","toS","actions","reducer"],"sources":["/Users/artificalmanny/Portfolio/Intacom/Intacom/Intacom-frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport api from '../../api/api';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  profilePicture?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\ninterface LoginResponse {\n  user: User;\n  access_token: string;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  loading: false,\n  error: null,\n};\n\n// ----- Async Thunks -----\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (credentials: { email: string; password: string }, thunkAPI: any) => {\n    try {\n      const response = await axios.post('/auth/login', credentials);\n      return response.data;\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue(error.response.data.message);\n    }\n  }\n);\n\nexport const registerUser = createAsyncThunk<\n// Return type of the fulfilled action\nUser, \n// First argument to the thunk (registration data)\n{ email: string; password: string; name: string },\n// ThunkAPI type\n{ rejectValue: string }\n>('auth/registerUser', async (userData, thunkAPI) => {\ntry {\n  const response = await axios.post('/users/register', userData);\n  return response.data;\n} catch (error: any) {\n  // Adjust if your error object has a different shape\n  return thunkAPI.rejectWithValue(error.response?.data?.error || 'Registration failed');\n}\n});\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      state.error = null;\n    },\n    setCredentials(state, action: PayloadAction<{ user: User; access_token: string }>) {\n      state.user = action.payload.user;\n      state.token = action.payload.access_token;\n    },\n  },\n  extraReducers: (builder) => {\n    // Login\n    builder\n    .addCase(loginUser.pending, (state) => {\n      state.loading = true;\n      state.error = null;\n    })\n    .addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.access_token;\n    })\n    .addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.toString ?? 'Login request was rejected';\n    })\n    // Register\n    .addCase(registerUser.pending, (state) => {\n      state.loading = true;\n      state.error = null;\n    })\n    .addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    })\n    .addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.toS ?? 'Registration request was rejected';\n    });\n  },\n});\n\nexport const { logout, setCredentials } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}